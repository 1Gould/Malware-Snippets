function Decompress-FromGzipBase64 {
    param(
        [Parameter(Mandatory = $true)]
        [string] $Base64CompressedInput
    )

    $data = [System.Convert]::FromBase64String($Base64CompressedInput)
    $ms = New-Object System.IO.MemoryStream($data, 0, $data.Length)
    $cs = New-Object System.IO.Compression.GZipStream($ms, [System.IO.Compression.CompressionMode]::Decompress)

    $decompressedStream = New-Object System.IO.MemoryStream
    $buffer = New-Object byte[] 1024
    while (($read = $cs.Read($buffer, 0, 1024)) -gt 0) {
        $decompressedStream.Write($buffer, 0, $read)
    }

    # Cleanup
    $cs.Close()
    $ms.Close()

    $decompressedStream.Position = 0
    $decompressedBytes = $decompressedStream.ToArray()
    $reader = New-Object System.IO.StreamReader($decompressedStream)
    $textOutput = $reader.ReadToEnd()

    $decompressedStream.Close()
    $reader.Close()
    return $textOutput
}

# Edit the function based on what you need
# If you only need the byte array then remove the $reader and return $compressedBytes
# If its a powershell script / text
# then return $textOutput and IEX $textOutput
# $decompressionResult = Decompress-FromGzipBase64 -Base64CompressedInput $compressedBase64 
# Write-Host "Decompressed String: $($decompressionResult.Text)"
# IEX $decompressionResult


function Compress-ToGzipBase64 {
	param( 
		[Parameter(Mandatory = $true)] 
		[byte[]] $InputBytes 
	)
	$ms = New-Object System.IO.MemoryStream 
	$cs = New-Object System.IO.Compression.GZipStream($ms, [System.IO.Compression.CompressionMode]::Compress, $true)
	$cs.Write($InputBytes, 0, $InputBytes.Length)
	$cs.Close()
	$ms.Position = 0
	$compressedBytes = $ms.ToArray()
	$ms.Close()
	$base64Compressed = [System.Convert]::ToBase64String($compressedBytes)
	return $base64Compressed
}

# Example usage of Compress-ToGzipBase64 
# $buf = [System.IO.File]::ReadAllBytes("D:\OSEP\Malware-Snippets\PowerShell\Test.ps1")
# $compressedBase64 = Compress-ToGzipBase64 -InputBytes $buf
# Write-Host "Compressed Base64: $compressedBase64"